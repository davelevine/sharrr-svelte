name: Playwright Tests

on:
  deployment_status:

env:
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  FLOW_S3_ENDPOINT: ${{ secrets.FLOW_S3_ENDPOINT }}
  FLOW_S3_ACCESS_KEY: ${{ secrets.FLOW_S3_ACCESS_KEY }}
  FLOW_S3_SECRET_KEY: ${{ secrets.FLOW_S3_SECRET_KEY }}
  API_SECRET_KEY: ${{ secrets.API_SECRET_KEY }}
  PUBLIC_FLOW_S3_BUCKET: ${{ secrets.PUBLIC_FLOW_S3_BUCKET }}

jobs:
  run-e2e-ci:
    name: Run end-to-end tests
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - name: Install dependencies
        run: npm ci && npx playwright install --with-deps
      - name: Run tests
        run: npx playwright test
        env:
          PUBLIC_ENV: ci
          VERCEL_URL: http://localhost:4173
      - name: Create folder for artifacts
        run: mkdir -p playwright-report/ci
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-ci
          path: playwright-report/ci

  run-e2e-published:
    name: Run end-to-end tests on published site
    if: github.event_name == 'deployment_status' && github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci && npx playwright install --with-deps
      - name: Run tests
        run: npx playwright test
        env:
          PUBLIC_ENV: preview
          VERCEL_URL: ${{ github.event.deployment_status.target_url }}
      - name: Create folder for artifacts
        run: mkdir -p playwright-report/published
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report-published
          path: playwright-report/published
